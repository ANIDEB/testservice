name: CI / CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: testservice

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Run tests
        run: |
          go test ./...
          go vet ./...

  build-and-deploy:
    name: Build, push image and deploy to Cloud Run
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Authenticate to GCP (for docker push and deploy)
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT }}

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ secrets.CLOUD_RUN_REGION }}-docker.pkg.dev --quiet

      - name: Build and push Docker image to Artifact Registry
        run: |
          IMAGE="${{ secrets.CLOUD_RUN_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/testservice/testservice:${{ github.sha }}"
          echo "Building and pushing $IMAGE"
          docker build -t "$IMAGE" .
          docker push "$IMAGE"
        env:
          DOCKER_BUILDKIT: 1

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ secrets.CLOUD_RUN_SERVICE }}
          image: ${{ secrets.CLOUD_RUN_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/testservice/testservice:${{ github.sha }}
          region: ${{ secrets.CLOUD_RUN_REGION }}
          project_id: ${{ secrets.GCP_PROJECT }}
        # Deployment will fail if required secrets are not set; this is intentional so you can configure secrets in repository settings.
